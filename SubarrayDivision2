using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

class Result
{
    /*
     * Complete the 'birthday' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts following parameters:
     *  1. INTEGER_ARRAY s
     *  2. INTEGER d
     *  3. INTEGER m
     */
    public static int birthday(List<int> s, int d, int m)
    {
        int count = 0;

        // go through the list
        for (int i = 0; i <= s.Count - m; i++)
        {
            int sum = 0;
            for (int j = 0; j < m; j++)
            {
                sum += s[i + j];
            }

            // If the sum matches Ron's birth day, increment the count
            if (sum == d)
            {
                count++;
            }
        }

        return count;
    }
}

class Solution
{
    public static void Main(string[] args)
    {
        // Custom Test Cases
        RunTest(new List<int> {1, 2, 1, 3, 2}, 3, 2, 2);  // Expected output: 2
        RunTest(new List<int> {1, 1, 1, 1, 1}, 2, 2, 4);  // Expected output: 4
        RunTest(new List<int> {4, 5, 4, 3, 1, 2}, 5, 1, 2);  // Expected output: 2
        RunTest(new List<int> {2, 2, 2, 2, 2}, 10, 5, 1);  // Expected output: 1
    }

=    private static void RunTest(List<int> s, int d, int m, int expected)
    {
        int result = Result.birthday(s, d, m);
        Console.WriteLine($"Input Array: {string.Join(" ", s)}");
        Console.WriteLine($"Day (d): {d}, Month (m): {m}");
        Console.WriteLine($"Expected Output: {expected}");
        Console.WriteLine($"Actual Output: {result}");
        Console.WriteLine(result == expected ? "Test Passed\n" : "Test Failed\n");
    }
}
